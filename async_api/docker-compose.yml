version: '3.8'

services:
  postgres:
    image: postgres:13.0-alpine
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init_db.sql:/docker-entrypoint-initdb.d/init.sql

  elastic:
    image: elasticsearch:7.17.0
    environment:
      - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  etl:
    restart: always
    build:
      context: ./etl
    depends_on:
      - postgres
      - elastic
    environment:
      - DB__NAME=${DB_NAME}
      - DB__USER=${DB_USER}
      - DB__PASSWORD=${DB_PASSWORD}
      - DB__HOST=${DB_HOST}
      - DB__PORT=5432
      - ELASTICSEARCH__HOST=${ES_HOST}
      - ELASTICSEARCH__PORT=${ES_PORT}
      - REDIS__HOST=${REDIS_HOST}
      - REDIS__PORT=${REDIS_PORT}
    env_file:
      - .env
    command: python main.py

  redis:
    image: redis:6.2-alpine
    restart: always
    volumes:
      - redis:/data
    command:
      - sh
      - -c
      - redis-server --appendonly yes --maxmemory 450000000 --maxmemory-policy volatile-lru
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    networks:
      - default
    deploy:
      resources:
        limits:
          memory: 512M

  movies-api:
    build:
      context: ./src
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis
      - elastic
    env_file:
      - .env

  admin-panel:
    image: irabrosimov/admin_panel:v1
    restart: always
    volumes:
      - static_volume:/app/static/
    env_file:
      - ./.env

  nginx:
    image: nginx:latest
    volumes:
      - static_volume:/data/static/:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - admin-panel

volumes:
  postgres_data:
  elasticsearch-data:
  static_volume:
  redis:
